DataBase Implementation

Many DB Technologies such as MongoDB, MySQL, Veras and many more.
Node has packages to work with most of these options. These all options fall into two categories:
1. SQL   2. NoSQL

SQL
Lot of Up-Front Design
Sometimes performance and query benefits
Sometimes performance hits from overhead

NoSQL
No structure, just collections of any data
Less or no up-front design work
Sometimes performance gains 

No Perfect Solution 
Depends on knowing and understanding your requirements

For this Chat Application we will use NoSQL MongoDB. (Part of MEAN stack)

Setting Up MongoDB Environments
1. We could run and download MongoDB locally but when it will come to publishing the app, 
    a. we will need to host it seperately or 
    b. find a third party host for it.
Hence, we will start by using mLab, a service that offers free hosting. 
mLab is now part of MongoDB and a few things might look different. But the tools to mange a DB should be the same.

Make an account on mLab.com and setup the DB.
After setting up we will connect Node to MongoDB and for this we will use a package called "Mongoose".

Mongoose
Mongoose allows us to elegantly work with our mongoDB database with object schemas.
Object schemas are JS objects we create that will represent the type of data we will be putting in our database.
Even though MongoDB is NoSQL and does not have structure, but with Mongoose there is a bit of a structure we must design initially. This gives us some benefits of easily interacting with our data through objects, and other things such as validation. 